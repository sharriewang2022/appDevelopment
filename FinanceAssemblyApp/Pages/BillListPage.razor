@page "/billlistpage"
@using System.ComponentModel
@using AntDesign
@using AntDesign.TableModels
@using System.Text.Json
@using FinanceAssemblyApp.Data
@using FinanceAssemblyApp.Models
@inject BillDBService billDBService

<h1>Search Bill</h1>

<div style="border:dashed 1px;background-color:lightgoldenrodyellow;">
</div>

<Table @ref="table"
       TItem="Bill"
       DataSource="@bills"
       Total="_total"
       @bind-PageIndex="_pageIndex"
       @bind-PageSize="_pageSize"
       @bind-SelectedRows="selectedRows"
       OnChange="OnChange">
    <Selection Key="@(context.Id.ToString())" />
    <PropertyColumn Property="c=>c.Id" Sortable />
    <PropertyColumn Title="Bill Type" Property="c=>c.BillType" Sortable />
    <PropertyColumn Title="Bill Date" Property="c=>c.BillDate" Format="yyyy-MM-dd" Sortable />
    <PropertyColumn Title="Bill No" Property="c=>c.BillNo" Sortable />
    <PropertyColumn Title="Bill Direction" Property="c=>c.BillDirection" Sortable />
    <PropertyColumn Title="Bill Amount" Property="c=>c.BillAmount" Sortable />
    <PropertyColumn Title="Bill Abstract" Property="c=>c.BillAbstract" Sortable />
    <PropertyColumn Property="c=>c.Remark" />
    <ActionColumn>
        <Space>
            <SpaceItem><Button Danger OnClick="()=>Delete(context.Id)">Delete</Button></SpaceItem>
        </Space>
    </ActionColumn>
</Table>
<br />
<p>PageIndex: @_pageIndex | PageSize: @_pageSize | Total: @_total</p>

<br />

<Button Type="@ButtonType.Primary" OnClick="()=> { _pageIndex--; }">Previous page</Button>
<Button Type="@ButtonType.Primary" OnClick="()=> { _pageIndex++; }">Next Page</Button>

@code {
    private Bill[] bills;
    IEnumerable<Bill> selectedRows;
    ITable table;
    int _pageIndex = 1;
    int _pageSize = 10;
    int _total = 0;

    protected override async Task OnInitializedAsync()
    {
        bills = await GetAllBills(1, 50);
        _total = 50;
    }

    public void OnChange(QueryModel<Bill> queryModel)
    {
        Console.WriteLine(JsonSerializer.Serialize(queryModel));
    }
    public async Task<Bill[]> GetAllBills(int start, int end)
    {
        List<Bill> billList = await billDBService.GetAllBillsAsync();
        if (billList != null)
        {
            return billList.ToArray();        
        }
        else
        {
            return new Bill[1];
        }

    }
    public void RemoveSelection(int id)
    {
        var selected = selectedRows.Where(x => x.Id != id);
        selectedRows = selected;
    }

    private void Delete(int id)
    {
        bills = bills.Where(x => x.Id != id).ToArray();
        _total = bills.Length;
    }
}

